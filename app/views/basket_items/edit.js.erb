basket_item_field = document.getElementById('basket_item');
body = document.querySelector('.opacitize');
basket_item_field.classList.remove("shrink");
// body.classList.add("layer");


<%#= item_quantity = current_user.basket.basket_items.find_by(menu_item_id: @menu_item)[0].quantity %>


if (basket_item_field.classList.contains("hidden")) {
  basket_item_field.classList.remove("hidden")
}

while (basket_item_field.firstChild) {
  basket_item_field.firstChild.remove()
}

insertBasketItem = (data) => {
    my_basket_item =
    `
    <div class="adding-item">
      <button class="back-menu"><i class="fas fa-times" id="exit_cross"></i></button>
      <%= @basket_item.menu_item.name %>
      <div id="price" data-price="<%= @basket_item.menu_item.price %>">£<%= @basket_item.menu_item.price * @basket_item.quantity %></div>
    </div>


    <div class="actions">
      <a class="btn round-bordered incrementer"  id="btnMinus" data-offset="-1"><i class="fas fa-minus-circle"></i></a>
      <span id="counter" data-count="<%= @basket_item.quantity %>"><%= @basket_item.quantity %></span>



      <a class="btn round-bordered incrementer" id= "btnPlus"  data-offset="1"><i class="fas fa-plus-circle"></i></a>
    </div>



    <%= simple_form_for([@menu_item, @basket_item], input_html: {id: "form_value_quant"})  do |f| %>
      <%= f.input :quantity, as: :hidden, input_html: { value: @basket_item.quantity.to_i, id:"input_quant"} %>

      <button type='submit' id="quantbask">
        Update
      </button>

      <%= link_to menu_item_basket_item_path(),:method => "delete" do %>
          <button type='submit' id="destroy_item" class="hidden">
            Remove Item
          </button>
      <% end  %>



    <% end %>

`;
  basket_item_field.insertAdjacentHTML('beforeend', my_basket_item);
};
insertBasketItem()




buttonPlus = document.getElementById("btnPlus");
buttonMinus = document.getElementById("btnMinus");
count_display = document.getElementById("counter");
exit_div = document.getElementById('exit_cross');

// price = document.getElementById("price").innerHTML;
var price = document.getElementById("price").dataset.price;

counter = <%= current_user.basket.basket_items.where(menu_item_id: @menu_item)[0].quantity %>

plus = (data) => {
  buttonPlus.addEventListener("click", (event) => {
    event.preventDefault();
    counter += 1;
    console.log(document.getElementById('price'))
    let new_price = counter * parseFloat(price, 10);
    let n = `£ ${new_price.toFixed(2)} `;
    document.getElementById('price').innerHTML = n;
    console.log(counter * parseFloat(price, 10))
    count_display.innerText = counter;
    // price.value = price + (counter * price)
    // buttonPlus.classList.add('currently-loading')

  });
};

minus = (data) => {
  buttonMinus.addEventListener("click", (event) => {
    event.preventDefault();
    if (counter != 0) {
    counter -= 1;

    }


    let new_price = counter * parseFloat(price, 10);
    let n = `£ ${new_price.toFixed(2)} `;
    document.getElementById('price').innerHTML = n;
    count_display.innerText = counter

  });
};



plus()
minus()
setTimeout(function(){ basket_item_field.classList.add("shrink"); }, 500);


closeBox = (data) => {
  exit_div.addEventListener("click", (event) => {
    event.preventDefault();
      // body.classList.remove("layer");
      basket_item_field.classList.add("hidden");
  });
};
quantity = document.getElementById('counter');
bask = document.getElementById('quantbask');
destroy_item = document.getElementById('destroy_item');


input_quantity = document.getElementById("input_quant").value;

closeBox_added = (data) => {
  bask.addEventListener("click", (event) => {
// form_value_quant = document.getElementById("new_basket_item")
    event.preventDefault();

  form_value_quant = document.getElementById(event.currentTarget.parentElement.id)

      // give input a class
      // done
      // target the input
      // done
      // update the value with the counter
      document.getElementById("input_quant").value = counter;

      // submit the form
      basket_item_field.classList.remove("shrink");
      // body.classList.remove("layer");
      form_value_quant.submit();
  });
};
closeBox_added()

add_hidden = (data) => {
  buttonMinus.addEventListener("click", (event) => {
    event.preventDefault();
    if (count_display.innerHTML == 0) {
        bask.classList.add("hidden");
        destroy_item.classList.remove("hidden");

    };


  });
};

rem_hidden = (data) => {
  buttonPlus.addEventListener("click", (event) => {
    event.preventDefault();

        bask.classList.remove("hidden");
        destroy_item.classList.add("hidden")

  });
};



rem_hidden()
add_hidden()
closeBox()

